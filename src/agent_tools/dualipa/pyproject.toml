[project]
name = "dualipa"
version = "0.1.0"
description = "A framework for fine-tuning language models on code repositories"
authors = [{ name = "Graham Anderson", email = "graham@grahama.co" }]
requires-python = ">=3.8"
license = { text = "MIT" }
readme = "README.md"
dependencies = [
    # Core dependencies
    "torch>=2.0.0",
    "transformers>=4.34.0",
    "peft>=0.5.0",
    "datasets>=2.14.0",
    "unsloth>=0.3.1",
    "accelerate>=0.24.0",
    "bitsandbytes>=0.41.0",
    
    # Logging and utilities
    "loguru>=0.7.0",
    "tqdm>=4.66.0",
    
    # HTTP and async
    "aiohttp>=3.8.4",
    "requests>=2.28.0",
    "asyncio>=3.4.3",
    
    # Git operations
    "gitpython>=3.1.30",
    
    # Markdown parsing
    "markdown-it-py>=3.0.0",
    "mistune>=3.0.0",
    
    # LLM integration
    "litellm>=1.0.0",
    "openai>=1.0.0",
    "tenacity>=8.2.0",
    "pydantic>=2.0.0",
    "cachetools>=5.0.0",
    "pillow>=10.0.0",
    "rapidfuzz>=3.9.0",
    
    # CLI utilities
    "click>=8.1.3",
    "rich>=13.0.0",
    
    # Advanced code analysis
    "agent_tools-method_validator",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["src/agent_tools/dualipa"]

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = ["-n", "auto", "--dist", "loadfile"]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[project.scripts]
dualipa = "agent_tools.dualipa:main" 