[project]
name = "agent-tools"
version = "0.1.0"
description = "AI Agent's tool for Python package method analysis and API discovery"
authors = [{ name = "Sparta Team", email = "team@sparta.ai" }]
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "loguru>=0.7.0",
    "tqdm>=4.66.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    "python-dotenv>=1.0.0",
    "litellm>=1.61.20",
    "pytest-xdist==3.5.0",
    "mypy>=1.14.1",
    "prospector>=1.10.3"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist==3.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "cursor-rules @ git+https://github.com/grahama1970/snippets.git#egg=cursor-rules&subdirectory=.cursor/rules"
]

[project.urls]
Homepage = "https://github.com/graham1970/agent-tools"
Documentation = "https://github.com/graham1970/agent-tools#readme"
Repository = "https://github.com/graham1970/agent-tools.git"
Issues = "https://github.com/graham1970/agent-tools/issues"

[project.scripts]
method-validator = "agent_tools.method_validator.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["src/agent_tools"]

[tool.hatch.build.targets.wheel]
packages = ["src/agent_tools"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
src_paths = ["src"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
mypy_path = "src"

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
src = ["src"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-n auto --dist loadfile"
testpaths = ["tests"]
pythonpath = ["src"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["agent_tools"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[dependency-groups]
dev = [
    "mypy>=1.14.1",
    "prospector>=1.10.3",
    "pydantic>=2.10.6",
    "types-requests>=2.32.0.20241016",
]

[tool.cursor.patterns]
pattern_directories = [".cursor/rules"]
install_location = "project_root"
